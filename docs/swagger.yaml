---
swagger: '2.0'
info:
  version: 0.0.1
  description: |
    一个基于Seeed Wio Iot平台开发的快速查看窗外温度的装置。
  title: Temp-io API
host: temp.io
basePath: /api/v1
paths:
  /user:
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 获得当前用户信息
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
  /user/{uid}:
    parameters:
      - $ref: '#/parameters/uid'
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 获得用户信息
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
  /users/{uid}/temps:
    parameters:
      - $ref: '#/parameters/uid'
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 获得用户所有的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              temps:
                type: array
                items:
                  $ref: '#/definitions/temp'
    post:
      security:
        - Authorization: []
        - access_token: []
      summary: 创建一个温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
  /users/{uid}/temps/{tid}:
    parameters:
      - $ref: '#/parameters/uid'
      - $ref: '#/parameters/tid'
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 获得指定的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
    patch:
      security:
        - Authorization: []
        - access_token: []
      summary: 更新指定的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
    delete:
      security:
        - Authorization: []
        - access_token: []
      summary: 删除指定的温度
      description: ""
      responses:
        204:
          description: No Content
  /temps:
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 获得所有的公开温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              temps:
                type: array
                items:
                  $ref: '#/definitions/temp'
securityDefinitions:
  Authorization:
    type: apiKey
    name: Authorization
    in: header
    description: |
      认证信息，通过Authorizatin头的方式添加token。以`token`开头空格后加上token,如`token your_token`
  access_token:
    type: apiKey
    name: access_token
    in: query
    description: |
      认证信息，通过query参数access_token方式添加token。
parameters:
  uid:
    name: uid
    in: path
    description: 用户ID
    required: true
    type: integer
  tid:
    name: tid
    in: path
    description: 温度ID
    required: true
    type: integer
definitions:
  timestamp:
    type: string
    format: date-time
    description: ISO 8601/RFC3339 formatted DateTime
    example: 2016-11-22T02:25:01Z
  user:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: awong1900
      avatar_url:
        type: string
        example: https://avatars.githubusercontent.com/u/4022612?v=3
      created_at:
        $ref: '#/definitions/timestamp'
      updated_at:
        $ref: '#/definitions/timestamp'
  temp: 
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: home one
      description:
        type: string
        example: Home south glass
      owner:
        $ref: '#/definitions/user'
      private:
        type: boolean
        example: false
      gps:
        type: string
        example: 33,23
      picture_url:
        type: string
        example: https://temp.io/1.jpg
      created_at:
        $ref: '#/definitions/timestamp'
      updated_at:
        $ref: '#/definitions/timestamp'




