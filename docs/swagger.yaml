---
swagger: '2.0'
info:
  version: 0.0.2
  description: |
    一个基于Seeed Wio Iot平台开发的快速查看窗外温度的装置。
    
    ## Online test
    1. 从https://awong1900.github.io/quickstart-js 登陆
    2. 拷贝token填入右上角认证
    
  title: Temp-io API
host: api.temp-io.life
basePath: /v1
schemes:
  - https
tags:
  - name: user
  - name: temp
paths:
  /me:
    get:
      tags:
        - user
      security:
        - Authorization: []
        - access_token: []
      summary: 获得当前用户信息
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
  /user/{uid}:
    parameters:
      - $ref: '#/parameters/uid'
    get:
      tags:
        - user
      security:
        - Authorization: []
        - access_token: []
      summary: 获得用户信息
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
  /users/{uid}/temps:
    parameters:
      - $ref: '#/parameters/uid'
    get:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 获得用户所有的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              temps:
                type: array
                items:
                  $ref: '#/definitions/temp'
    post:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 创建一个温度
      description: 创建温度后，前端UI应提供界面把ID和KEY写入实际设备中，完成激活。
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
  /users/{uid}/temps/{tid}:
    parameters:
      - $ref: '#/parameters/uid'
      - $ref: '#/parameters/tid'
    get:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 获得指定的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
    patch:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 更新指定的温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/temp'
    delete:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 删除指定的温度
      description: ""
      responses:
        204:
          description: No Content
  /users/{uid}/temps/{tid}/update:
    parameters:
      - $ref: '#/parameters/uid'
      - $ref: '#/parameters/tid'
    put:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 通过OTA(Over The Air)方式更新设备固件
      description: ""
      responses:
        202:
          description: Accepted
  /users/{uid}/temps/{tid}/history:
    parameters:
      - $ref: '#/parameters/uid'
      - $ref: '#/parameters/tid'
    get:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 获取温度的历史数据
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              temperatures:
                type: array
                items:
                  $ref: '#/definitions/temperature'
  /verify/activation:
    get:
      security:
        - Authorization: []
        - access_token: []
      summary: 校验是否激活
      description: 实际是检测设备上线情况，如上线，代表已激活，设置temp的`activated`置`true`
      responses:
        204:
          description: No Content
  /temps:
    get:
      tags:
        - temp
      security:
        - Authorization: []
        - access_token: []
      summary: 获得所有的公开温度
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              temps:
                type: array
                items:
                  $ref: '#/definitions/temp'
securityDefinitions:
  Authorization:
    type: apiKey
    name: Authorization
    in: header
    description: |
      认证信息，通过Authorizatin头的方式添加token。以`token`开头空格后加上token,如`token your_token`
  access_token:
    type: apiKey
    name: access_token
    in: query
    description: |
      认证信息，通过query参数access_token方式添加token。
parameters:
  uid:
    name: uid
    in: path
    description: 用户ID
    required: true
    type: integer
  tid:
    name: tid
    in: path
    description: 温度ID
    required: true
    type: integer
definitions:
  timestamp:
    type: string
    format: date-time
    description: ISO 8601/RFC3339 formatted DateTime
    example: 2016-11-22T02:25:01Z
  user:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: awong1900
      avatar_url:
        type: string
        example: https://avatars.githubusercontent.com/u/4022612?v=3
      created_at:
        $ref: '#/definitions/timestamp'
      updated_at:
        $ref: '#/definitions/timestamp'
  temp:
    type: object
    properties:
      id:
        type: string
        description: 从WIO服务器获取，需要写入实际设备中
        example: id123
      key:
        type: string
        description: 从WIO服务器获取，需要写入实际设备中
        example: key123
      online:
        type: boolean
        description: 从WIO服务器获取
        example: false
      temperature:
        type: integer
        description: 摄氏温度
        example: 25
      temperature_f:
        type: integer
        description: 华氏温度
        example: 70
      temperature_updated_at:
        $ref: '#/definitions/timestamp'
      read_period:
        type: integer
        description: 多久从传感器读一次数据，单位为秒
        example: 60
      has_sleep:
        type: boolean
        description: 如果打开，读一次数据后，会自动休眠设备一定时间，下次读之前设备会自动唤醒。
        example: true
      name:
        type: string
        example: Home
      description:
        type: string
        example: Home south glass
      owner:
        $ref: '#/definitions/user'
      private:
        type: boolean
        example: false
      open:
        type: boolean
        description: |
          关闭或者打开读取， 如果超过3个读取周期没有读到数据，会自动关闭。同时错误信息在`status`,`status_text`。
      status:
        type: string
        description: sdfsd
        example: normal
      status_text:
        type: string
        description: more status message or error message
        example: The device is not wake up more three read period.
      activated:
        type: boolean
        description: 是否激活了Temp-io设备，如果激活过程中，一段时间后，仍显示未激活，应重新激活设备。
        example: true
      gps:
        type: string
        example: 33,23
      picture_url:
        type: string
        example: https://temp.io/1.jpg
      created_at:
        $ref: '#/definitions/timestamp'
      updated_at:
        $ref: '#/definitions/timestamp'
  temperature:
    type: object
    properties:
      temperature:
        type: integer
        example: 25
      temperature_f:
        type: integer
        example: 70
      created_at:
        $ref: '#/definitions/timestamp'
            
